#
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#

errorPrefix = 'ERROR: '
errorMessage = ERROR: {0}
pluginDisplayName = Deploy to Kubernetes

KubernetesDeploy_starting = Starting Kubernetes deployment
KubernetesDeploy_endWithErrorState = Kubernetes deployment ended with {0}
KubernetesDeploy_finished = Finished Kubernetes deployment

JobContext_failedToGetEnv = Failed to get Job environment variables
JobContext_nullContent = null content returned

KubernetesClientWrapper_loadingConfiguration = Loading configuration: {0}
KubernetesClientWrapper_noResourceLoadedFrom = No resource loaded from: {0}
KubernetesClientWrapper_applied = Applied {0}: {1}
KubernetesClientWrapper_created = Created {0}: {1}
KubernetesClientWrapper_skipped = Skipped unsupported resource: {0}
KubernetesClientWrapper_prepareSecretsWithName = Prepare Docker container registry secrets with name: {0}
KubernetesClientWrapper_secretNameTooLong = ERROR: Secret name is longer than 253 characters: {0}
KubernetesClientWrapper_illegalSecretName = ERROR: Illegal secret name: ''{0}''. See https://kubernetes.io/docs/concepts/overview/working-with-objects/names/ for reference.
KubernetesClientWrapper_resourceNotFound = {0} (name: {1}) was not found in the Kubernetes cluster.
KubernetesClientWrapper_noName = %s does not have name: %s

DeploymentCommand_blankNamespace = Kubernetes secret namespace is not specified
DeploymentCommand_blankConfigFiles = Kubernetes config files are not specified.
DeploymentCommand_noMatchingConfigFiles = No matching configuration files found for {0}
DeploymentCommand_injectSecretName = Inject environment variable {0}={1}

ConfigFileCredentials_pathRequired = kubeconfig file path is required
ConfigFileCredentials_configFileNotFound = Config file {0} was not found in workspace {1}

SSHCredentials_selectCredentials = --- Select SSH Credentials ---
SSHCredentials_serverRequired = SSH server is required
SSHCredentials_credentialsIdRequired = The SSH credential is required

TextCredentials_serverUrlRequired = Cluster server URL is required
TextCredentials_serverUrlShouldBeHttps = Server URL should be in HTTPS protocol
TextCredentials_certificateAuthorityDataRequired = Certificate authority data is required
TextCredentials_clientCertificateDataRequired = Client certificate data is required
TextCredentials_clientKeyDataRequired = Client key data is required

KubernetesDeployContext_unknownCredentialsType = Unknown cluster credentials type: {0}
KubernetesDeployContext_kubeconfigNotConfigured = kubeconfig file path is not configured
KubernetesDeployContext_sshServerNotConfigured = SSH server is not configured
KubernetesDeployContext_sshCredentialsNotSelected = SSH credential is not selected
KubernetesDeployContext_cannotFindKubeconfigOnServer = Cannot find {0} on SSH server {1}
KubernetesDeployContext_failedOnSSH = Failed to validate SSH credentials: {0}
KubernetesDeployContext_serverUrlNotConfigured = Server URL is not configured
KubernetesDeployContext_serverUrlNotHttps = Server URL is not in HTTPS protocol
KubernetesDeployContext_certificateAuthorityNotConfigured = Certificate authority data is not configured
KubernetesDeployContext_clientCertificateDataNotConfigured = Client certificate data is not configured
KubernetesDeployContext_clientKeyDataNotConfigured = Client key data is not configured
KubernetesDeployContext_configsNotConfigured = Kubernetes config files are not configured
KubernetesDeployContext_validateSuccess = Successfully validated configuration
